Resources:
  GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi

  RecipesDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: partitionKey
          AttributeType: S
        - AttributeName: sortKey
          AttributeType: S
      KeySchema:
        - AttributeName: partitionKey
          KeyType: HASH
        - AttributeName: sortKey
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName: ${self:provider.environment.RECIPES_TABLE}
      GlobalSecondaryIndexes:
        - IndexName: ${self:provider.environment.INDEX_NAME}
          KeySchema:
            - AttributeName: sortKey
              KeyType: HASH
            - AttributeName: partitionKey
              KeyType: RANGE
          Projection:
            ProjectionType: ALL # What attributes will be copied to an index

  AttachmentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:provider.environment.IMAGES_S3_BUCKET}
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - "*"
            AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            MaxAge: 3000

  RequestBodyValidator:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      Name: "request-body-validator"
      RestApiId:
        Ref: ApiGatewayRestApi
      ValidateRequestBody: true
      ValidateRequestParameters: false

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: "arn:aws:s3:::${self:provider.environment.IMAGES_S3_BUCKET}/*"
      Bucket: !Ref AttachmentsBucket