service: zippysaas
useDotenv: true

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-aws-documentation
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-reqvalidator-plugin

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-1'}

  environment:
    INDEX_NAME: INVERSE_KEY_IDX
    SIGNED_URL_EXPIRATION: 300
    #_X_AMZN_TRACE_ID: abcdf123151 # use for local runs only
    PAYMENTS_TABLE: payments-${self:service}-${self:provider.stage}


  #tracing:
  #  lambda: true
  #  apiGateway: true

custom:
  serverless-offline:
    port: 3003

  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    stages:
      - dev

  documentation:
    api:
      info:
        version: v1.0.0
        title: ZippySaaS
        description: ZippySaaS helps you build SaaS fast

functions:
  preSignUp:
    handler: src/auth/pre-signup.handler
    events:
      - cognitoUserPool:
          pool: ${self:provider.stage}-user-pool
          trigger: PreSignUp
          existing: true

  GetExample:
    handler: src/lambda/http/getExample.handler
    events:
      - http:
          method: get
          path: example
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  CreateCheckoutSession:
    handler: src/lambda/http/createCheckoutSession.handler
    events:
      - http:
          method: post
          path: create-checkout-session
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  CreatePortalSession:
    handler: src/lambda/http/createPortalSession.handler
    events:
      - http:
          method: post
          path: create-portal-session
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  StripeWebhook:
    handler: src/lambda/http/stripeWebhook.handler
    events:
      - http:
          method: post
          path: stripe-webhook
          cors: true
    # Add permissions for storage access
    # iamRoleStatements:
    #   - Effect: Allow
    #     Action:
    #       - dynamodb:GetItem
    #       - dynamodb:Query
    #     Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE}
    #   - Effect: Allow
    #     Action:
    #       - dynamodb:GetItem
    #       - dynamodb:Query
    #     Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE}/index/${self:provider.environment.INDEX_NAME}

resources:
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  - ${file(resources/api-gateway-authorizer.yml)}
  - ${file(resources/api-gateway.yml)}
